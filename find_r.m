function r_min = find_r(u, plot_flag)
% Find the optimlal z that best approximate the original covariance matrix.
%
% We use a multivariate normal distribution to account for temporal
% correlation between forecasted wind power values of different look-ahead
% time. The convariance matrix of this d-dim normal distribution is
% approximated with exponential cov function, and r is the tuned value.
% This function takes the cumulative probability function values of the 
% actual wind power output (using conditional distribution generated by 
% copula) and inversely transform it into a normal distribution variable.
%
% Then the function calculate the covariance matrix of the d-dim normal
% variable as the real value, and calculate the sum of squared residual of
% the simulated covariance matrix and the real covariance matrix, returns
% r with the least residual.
z = norminv(u);
len_u = size(u, 1); % Length of training data
dim_z = 24; % Suppose forecast length is 24 data points, so dim(z) = 24
z_repeated = nan(len_u-dim_z+1, dim_z); 
for j = 1: dim_z
    z_repeated(:, j)= z(j: len_u-dim_z+j);
end
cov_z = cov(z_repeated);

[m, n] = meshgrid(1: size(cov_z, 1));
nr = 50;
residual = nan(nr, 1);
for r = 1: nr
    SIGMA = exp(-(m-n).^2/r);
    residual(r) = trace((SIGMA - cov_z)*(SIGMA - cov_z));
end
[~, r_min] = min(residual);
if plot_flag == 1
    plot(1: nr, residual);
end
end